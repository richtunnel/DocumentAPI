services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    platform: linux/amd64
    ports:
      - "3000:3000"
      - "7071:7071"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DB_SERVER=mssql
      - DB_DATABASE=PartnersDB
      - DB_USER=sa
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=1433
      - REDIS_CONNECTION_STRING=redis://redis:6379
      - BLOB_STORAGE_CONNECTION_STRING=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://azurite:10000/devstoreaccount1;
      - API_KEY_ENCRYPTION_KEY=${API_KEY_ENCRYPTION_KEY}
      - WEBHOOK_SECRET=${WEBHOOK_SECRET}
      - ENVIRONMENT=development
    volumes:
      - .:/app
    depends_on:
      mssql:
        condition: service_healthy
    command: npm run dev

  mssql:
    image: mcr.microsoft.com/azure-sql-edge:latest
    env_file:
      - .env
    platform: linux/amd64
    environment:
      - SA_PASSWORD=GreenSun83**
      - ACCEPT_EULA=Y
      - MSSQL_PID=Developer
    ports:
      - "1433:1433"
    volumes:
      - mssql-data:/var/opt/mssql
      - ./src/scripts/init-database.sql:/init-database.sql
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "GreenSun83**" -d master -Q "SELECT 1" || exit 1
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 60s

  redis:
    image: redis:7.0
    platform: linux/amd64
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    platform: linux/amd64
    ports:
      - "10000:10000"
      - "10001:10001"
      - "10002:10002"
    volumes:
      - azurite-data:/data

volumes:
  mssql-data:
  redis-data:
  azurite-data: