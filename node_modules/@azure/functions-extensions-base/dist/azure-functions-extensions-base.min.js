(()=>{"use strict";var e={156:function(e,r,t){var o=this&&this.__createBinding||(Object.create?function(e,r,t,o){void 0===o&&(o=t);var s=Object.getOwnPropertyDescriptor(r,t);s&&!("get"in s?!r.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return r[t]}}),Object.defineProperty(e,o,s)}:function(e,r,t,o){void 0===o&&(o=t),e[o]=r[t]}),s=this&&this.__exportStar||function(e,r){for(var t in e)"default"===t||Object.prototype.hasOwnProperty.call(r,t)||o(r,e,t)};Object.defineProperty(r,"__esModule",{value:!0}),s(t(984),r)},984:(e,r)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.ResourceFactoryResolver=void 0;class t{constructor(){this.resourceFactories=new Map}static getInstance(){return t.instance||(t.instance=new t),t.instance}registerResourceFactory(e,r){if(this.resourceFactories.has(e))throw new Error(`Factory for type "${e}" is already registered.`);this.resourceFactories.set(e,r)}createClient(e,r){const t=this.resourceFactories.get(e);if(!t)throw new Error(`Factory for type "${e}" is not registered. Register a factory implementation before creating clients.`);return t(r)}hasResourceFactory(e){return this.resourceFactories.has(e)}}r.ResourceFactoryResolver=t}},r={},t=function t(o){var s=r[o];if(void 0!==s)return s.exports;var i=r[o]={exports:{}};return e[o].call(i.exports,i,i.exports,t),i.exports}(156);module.exports=t})();
//# sourceMappingURL=azure-functions-extensions-base.min.js.map